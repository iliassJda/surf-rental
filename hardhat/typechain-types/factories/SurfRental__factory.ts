/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { SurfRental, SurfRentalInterface } from "../SurfRental";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deposit",
        type: "uint256",
      },
    ],
    name: "BoardListed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "renter",
        type: "address",
      },
    ],
    name: "BoardRented",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
    ],
    name: "BoardReturned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "result",
        type: "bool",
      },
    ],
    name: "DepositDecision",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "boards",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "pricePerDay",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deposit",
        type: "uint256",
      },
      {
        internalType: "enum SurfRental.Status",
        name: "available",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "renter",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllBoards",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "pricePerDay",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deposit",
            type: "uint256",
          },
          {
            internalType: "enum SurfRental.Status",
            name: "available",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "renter",
            type: "address",
          },
        ],
        internalType: "struct SurfRental.Board[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "pricePerDay",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deposit",
        type: "uint256",
      },
    ],
    name: "listBoard",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nextBoardId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "pendingWithdrawals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
    ],
    name: "rentBoard",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "resetBoards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
    ],
    name: "returnBoard",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "boardIsOk",
        type: "bool",
      },
    ],
    name: "returnDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506120498061001f6000396000f3fe6080604052600436106100915760003560e01c8063817135e011610059578063817135e0146101345780639a7083f91461015f5780639eb08a51146101a2578063ba528a1b146101cb578063f3f43703146101f457610091565b80631872cd4c1461009657806337ab57c6146100c157806338598534146100ea5780633bddfd97146101015780633ccfd60b1461011d575b600080fd5b3480156100a257600080fd5b506100ab610231565b6040516100b89190611434565b60405180910390f35b3480156100cd57600080fd5b506100e860048036038101906100e391906114ce565b610481565b005b3480156100f657600080fd5b506100ff61079e565b005b61011b6004803603810190610116919061150e565b610862565b005b34801561012957600080fd5b50610132610ab3565b005b34801561014057600080fd5b50610149610c17565b604051610156919061154a565b60405180910390f35b34801561016b57600080fd5b506101866004803603810190610181919061150e565b610c1d565b60405161019997969594939291906115dc565b60405180910390f35b3480156101ae57600080fd5b506101c960048036038101906101c49190611787565b610d34565b005b3480156101d757600080fd5b506101f260048036038101906101ed919061150e565b610f0d565b005b34801561020057600080fd5b5061021b60048036038101906102169190611822565b611064565b604051610228919061154a565b60405180910390f35b60606000805467ffffffffffffffff8111156102505761024f61165c565b5b60405190808252806020026020018201604052801561028957816020015b61027661107c565b81526020019060019003908161026e5790505b50905060005b60005481101561047957600160008281526020019081526020016000206040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180546103279061187e565b80601f01602080910402602001604051908101604052809291908181526020018280546103539061187e565b80156103a05780601f10610375576101008083540402835291602001916103a0565b820191906000526020600020905b81548152906001019060200180831161038357829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff1660028111156103e2576103e161126a565b5b60028111156103f4576103f361126a565b5b81526020016005820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050828281518110610461576104606118af565b5b6020026020010181905250808060010191505061028f565b508091505090565b8160005481106104c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104bd9061192a565b60405180910390fd5b60006001600085815260200190815260200160002090508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461056f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610566906119bc565b60405180910390fd5b600160028111156105835761058261126a565b5b8160050160009054906101000a900460ff1660028111156105a7576105a661126a565b5b146105e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105de90611a28565b60405180910390fd5b60008160050160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008260050160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008260050160006101000a81548160ff0219169083600281111561067c5761067b61126a565b5b02179055508315610760578160040154600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106da9190611a77565b925050819055508160040154600260008460010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107589190611aab565b925050819055505b7f8c883d13441229ae4323ce6ae3d1386f9b303a9643f209e7ad4cdc0e3ec180138460405161078f9190611aee565b60405180910390a15050505050565b60005b60005481101561085857600160008281526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006107fe91906110f7565b600382016000905560048201600090556005820160006101000a81549060ff02191690556005820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055505080806001019150506107a1565b5060008081905550565b8060005481106108a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089e9061192a565b60405180910390fd5b6000600160008481526020019081526020016000209050600060028111156108d2576108d161126a565b5b8160050160009054906101000a900460ff1660028111156108f6576108f561126a565b5b14610936576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092d90611b55565b60405180910390fd5b8060040154816003015461094a9190611a77565b341461098b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098290611be7565b60405180910390fd5b60028160050160006101000a81548160ff021916908360028111156109b3576109b261126a565b5b0217905550338160050160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260008360010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a6e9190611a77565b925050819055507f5dff8c9bfa27cb7e4a44bdc9f48a14b089ee56b543f521655fde8f7ce1fe2a388333604051610aa6929190611c07565b60405180910390a1505050565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111610b3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3190611c7c565b60405180910390fd5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b6582604051610bc5919061154a565b60405180910390a23373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610c13573d6000803e3d6000fd5b5050565b60005481565b60016020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002018054610c6c9061187e565b80601f0160208091040260200160405190810160405280929190818152602001828054610c989061187e565b8015610ce55780601f10610cba57610100808354040283529160200191610ce5565b820191906000526020600020905b815481529060010190602001808311610cc857829003601f168201915b5050505050908060030154908060040154908060050160009054906101000a900460ff16908060050160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905087565b6040518060e0016040528060005481526020013373ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200160006002811115610d8957610d8861126a565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff1681525060016000805481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002019081610e239190611e48565b50606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff02191690836002811115610e6357610e6261126a565b5b021790555060c08201518160050160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050507f5d874e1df62f144b50447ead78e2556906143ae709b5f2a5baed1243f3c52442600054338484604051610ee99493929190611f1a565b60405180910390a1600080815480929190610f0390611f5f565b9190505550505050565b806000548110610f52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f499061192a565b60405180910390fd5b60006001600084815260200190815260200160002090508060050160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ffb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff290611ff3565b60405180910390fd5b60018160050160006101000a81548160ff021916908360028111156110235761102261126a565b5b02179055507ff86a0075d03661f61e46c8382af57fbc419656a00ae13b6e75991b9c9b2da82c83604051611057919061154a565b60405180910390a1505050565b60026020528060005260406000206000915090505481565b6040518060e0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081526020016000815260200160008152602001600060028111156110d4576110d361126a565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b5080546111039061187e565b6000825580601f106111155750611134565b601f0160209004906000526020600020908101906111339190611137565b5b50565b5b80821115611150576000816000905550600101611138565b5090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b61119381611180565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111c482611199565b9050919050565b6111d4816111b9565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156112145780820151818401526020810190506111f9565b60008484015250505050565b6000601f19601f8301169050919050565b600061123c826111da565b61124681856111e5565b93506112568185602086016111f6565b61125f81611220565b840191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600381106112aa576112a961126a565b5b50565b60008190506112bb82611299565b919050565b60006112cb826112ad565b9050919050565b6112db816112c0565b82525050565b60006112ec82611199565b9050919050565b6112fc816112e1565b82525050565b600060e08301600083015161131a600086018261118a565b50602083015161132d60208601826111cb565b50604083015184820360408601526113458282611231565b915050606083015161135a606086018261118a565b50608083015161136d608086018261118a565b5060a083015161138060a08601826112d2565b5060c083015161139360c08601826112f3565b508091505092915050565b60006113aa8383611302565b905092915050565b6000602082019050919050565b60006113ca82611154565b6113d4818561115f565b9350836020820285016113e685611170565b8060005b858110156114225784840389528151611403858261139e565b945061140e836113b2565b925060208a019950506001810190506113ea565b50829750879550505050505092915050565b6000602082019050818103600083015261144e81846113bf565b905092915050565b6000604051905090565b600080fd5b600080fd5b61147381611180565b811461147e57600080fd5b50565b6000813590506114908161146a565b92915050565b60008115159050919050565b6114ab81611496565b81146114b657600080fd5b50565b6000813590506114c8816114a2565b92915050565b600080604083850312156114e5576114e4611460565b5b60006114f385828601611481565b9250506020611504858286016114b9565b9150509250929050565b60006020828403121561152457611523611460565b5b600061153284828501611481565b91505092915050565b61154481611180565b82525050565b600060208201905061155f600083018461153b565b92915050565b61156e816111b9565b82525050565b600082825260208201905092915050565b6000611590826111da565b61159a8185611574565b93506115aa8185602086016111f6565b6115b381611220565b840191505092915050565b6115c7816112c0565b82525050565b6115d6816112e1565b82525050565b600060e0820190506115f1600083018a61153b565b6115fe6020830189611565565b81810360408301526116108188611585565b905061161f606083018761153b565b61162c608083018661153b565b61163960a08301856115be565b61164660c08301846115cd565b98975050505050505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61169482611220565b810181811067ffffffffffffffff821117156116b3576116b261165c565b5b80604052505050565b60006116c6611456565b90506116d2828261168b565b919050565b600067ffffffffffffffff8211156116f2576116f161165c565b5b6116fb82611220565b9050602081019050919050565b82818337600083830152505050565b600061172a611725846116d7565b6116bc565b90508281526020810184848401111561174657611745611657565b5b611751848285611708565b509392505050565b600082601f83011261176e5761176d611652565b5b813561177e848260208601611717565b91505092915050565b6000806000606084860312156117a05761179f611460565b5b600084013567ffffffffffffffff8111156117be576117bd611465565b5b6117ca86828701611759565b93505060206117db86828701611481565b92505060406117ec86828701611481565b9150509250925092565b6117ff816112e1565b811461180a57600080fd5b50565b60008135905061181c816117f6565b92915050565b60006020828403121561183857611837611460565b5b60006118468482850161180d565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061189657607f821691505b6020821081036118a9576118a861184f565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f426f61726420646f6573206e6f74206578697374000000000000000000000000600082015250565b6000611914601483611574565b915061191f826118de565b602082019050919050565b6000602082019050818103600083015261194381611907565b9050919050565b7f4f6e6c7920626f617264206f776e65722063616e20646563696465206f6e206460008201527f65706f7369740000000000000000000000000000000000000000000000000000602082015250565b60006119a6602683611574565b91506119b18261194a565b604082019050919050565b600060208201905081810360008301526119d581611999565b9050919050565b7f426f617264206d7573742062652072657475726e656420666972737400000000600082015250565b6000611a12601c83611574565b9150611a1d826119dc565b602082019050919050565b60006020820190508181036000830152611a4181611a05565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611a8282611180565b9150611a8d83611180565b9250828201905080821115611aa557611aa4611a48565b5b92915050565b6000611ab682611180565b9150611ac183611180565b9250828203905081811115611ad957611ad8611a48565b5b92915050565b611ae881611496565b82525050565b6000602082019050611b036000830184611adf565b92915050565b7f426f617264206973206e6f742079657420726561647900000000000000000000600082015250565b6000611b3f601683611574565b9150611b4a82611b09565b602082019050919050565b60006020820190508181036000830152611b6e81611b32565b9050919050565b7f496e636f7272656374207061796d656e742028636865636b20796f757220646560008201527f706f7369743f3f29000000000000000000000000000000000000000000000000602082015250565b6000611bd1602883611574565b9150611bdc82611b75565b604082019050919050565b60006020820190508181036000830152611c0081611bc4565b9050919050565b6000604082019050611c1c600083018561153b565b611c2960208301846115cd565b9392505050565b7f4e6f2066756e647320746f207769746864726177000000000000000000000000600082015250565b6000611c66601483611574565b9150611c7182611c30565b602082019050919050565b60006020820190508181036000830152611c9581611c59565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611cfe7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611cc1565b611d088683611cc1565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611d45611d40611d3b84611180565b611d20565b611180565b9050919050565b6000819050919050565b611d5f83611d2a565b611d73611d6b82611d4c565b848454611cce565b825550505050565b600090565b611d88611d7b565b611d93818484611d56565b505050565b5b81811015611db757611dac600082611d80565b600181019050611d99565b5050565b601f821115611dfc57611dcd81611c9c565b611dd684611cb1565b81016020851015611de5578190505b611df9611df185611cb1565b830182611d98565b50505b505050565b600082821c905092915050565b6000611e1f60001984600802611e01565b1980831691505092915050565b6000611e388383611e0e565b9150826002028217905092915050565b611e51826111da565b67ffffffffffffffff811115611e6a57611e6961165c565b5b611e74825461187e565b611e7f828285611dbb565b600060209050601f831160018114611eb25760008415611ea0578287015190505b611eaa8582611e2c565b865550611f12565b601f198416611ec086611c9c565b60005b82811015611ee857848901518255600182019150602085019450602081019050611ec3565b86831015611f055784890151611f01601f891682611e0e565b8355505b6001600288020188555050505b505050505050565b6000608082019050611f2f600083018761153b565b611f3c60208301866115cd565b611f49604083018561153b565b611f56606083018461153b565b95945050505050565b6000611f6a82611180565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611f9c57611f9b611a48565b5b600182019050919050565b7f4e6f742072656e74657200000000000000000000000000000000000000000000600082015250565b6000611fdd600a83611574565b9150611fe882611fa7565b602082019050919050565b6000602082019050818103600083015261200c81611fd0565b905091905056fea26469706673582212209bddcac3b7644a0dc953c026f0cb05ad763a5a638ea8965dde53e738404a1b7a64736f6c634300081c0033";

type SurfRentalConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SurfRentalConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SurfRental__factory extends ContractFactory {
  constructor(...args: SurfRentalConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SurfRental & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SurfRental__factory {
    return super.connect(runner) as SurfRental__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SurfRentalInterface {
    return new Interface(_abi) as SurfRentalInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): SurfRental {
    return new Contract(address, _abi, runner) as unknown as SurfRental;
  }
}
